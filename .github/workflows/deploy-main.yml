name: Deploy Main App

on:
  push:
    branches:
      - main
    paths:
      - 'packages/main-app/**'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "main-app"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm install

      # We need to build fragments first as the main app depends on them
      - name: Build Fragments
        run: pnpm --filter @webfragments/core run build

      - name: Build Main App
        run: pnpm --filter @webfragments/main-app run build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Prepare deployment
        run: |
          # Create a temporary directory
          mkdir -p tmp_deployment
          
          # Copy the main app build
          cp -r packages/main-app/dist/* tmp_deployment/
          
          # Try to download and preserve fragments
          mkdir -p tmp_deployment/fragments
          curl -L "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/fragments/party-button/index.js" -o tmp_deployment/fragments/party-button/index.js || true
          curl -L "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/fragments/dashboard/index.js" -o tmp_deployment/fragments/dashboard/index.js || true

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './tmp_deployment'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Display Deployment URL
        run: |
          echo "🚀 Main App has been deployed!"
          echo "📍 Access your app at: ${{ steps.deployment.outputs.page_url }}" 