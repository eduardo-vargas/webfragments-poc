name: Deploy Fragments

on:
  push:
    branches:
      - main
    paths:
      - 'packages/webfragments/**'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "fragments"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm install

      - name: Build Fragments
        run: |
          export NODE_ENV=production
          pnpm --filter @webfragments/core run build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Prepare deployment directory
        run: |
          # Create a temporary directory
          mkdir -p tmp_deployment
          
          # Try to download the current deployment
          curl -L "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/" -o tmp_deployment/index.html || true
          
          # Create the fragments directory
          mkdir -p tmp_deployment/fragments
          
          # Copy the new fragments build
          cp -r packages/webfragments/dist/* tmp_deployment/fragments/
          
          # Ensure demo HTML files are in the correct location
          for fragment in party-button dashboard; do
            mkdir -p "tmp_deployment/fragments/$fragment/demo"
            if [ -f "tmp_deployment/fragments/$fragment/demo/index.html" ]; then
              echo "Demo HTML found for $fragment"
            else
              echo "Warning: Demo HTML not found for $fragment"
            fi
          done

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './tmp_deployment'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Display Deployment URLs
        run: |
          echo "🚀 Fragments have been deployed!"
          echo "📍 Access your fragments at:"
          echo "🖥️ Party Button Demo: ${{ steps.deployment.outputs.page_url }}fragments/party-button/demo/"
          echo "🖥️ Dashboard Demo: ${{ steps.deployment.outputs.page_url }}fragments/dashboard/demo/"
          echo "📦 Party Button Module: ${{ steps.deployment.outputs.page_url }}fragments/party-button/index.js"
          echo "📦 Dashboard Module: ${{ steps.deployment.outputs.page_url }}fragments/dashboard/index.js" 